const t="undefined"==typeof Symbol?"__ͼ":Symbol.for("ͼ"),e="undefined"==typeof Symbol?"__styleSet"+Math.floor(1e8*Math.random()):Symbol("styleSet"),i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:{};class s{constructor(t,e){this.rules=[];let{finish:i}=e||{};function s(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function n(t,e,l,o){let h=[],r=/^@(\w+)\b/.exec(t[0]),f=r&&"keyframes"==r[1];if(r&&null==e)return l.push(t[0]+";");for(let i in e){let o=e[i];if(/&/.test(i))n(i.split(/,\s*/).map(e=>t.map(t=>e.replace(/&/,t))).reduce((t,e)=>t.concat(e)),o,l);else if(o&&"object"==typeof o){if(!r)throw new RangeError("The value of a property ("+i+") should be a primitive value.");n(s(i),o,h,f)}else null!=o&&h.push(i.replace(/_.*/,"").replace(/[A-Z]/g,t=>"-"+t.toLowerCase())+": "+o+";")}(h.length||f)&&l.push((!i||r||o?t:t.map(i)).join(", ")+" {"+h.join(" ")+"}")}for(let l in t)n(s(l),t[l],this.rules)}getRules(){return this.rules.join("\n")}static newName(){let e=i[t]||1;return i[t]=e+1,"ͼ"+e.toString(36)}static mount(t,i,s){let n=t[e],o=s&&s.nonce;n?o&&n.setNonce(o):n=new l(t,o),n.mount(Array.isArray(i)?i:[i],t)}}let n=new Map;class l{constructor(t,i){let s=t.ownerDocument||t,l=s.defaultView;if(!t.head&&t.adoptedStyleSheets&&l.CSSStyleSheet){let i=n.get(s);if(i)return t[e]=i;this.sheet=new l.CSSStyleSheet,n.set(s,this)}else this.styleTag=s.createElement("style"),i&&this.styleTag.setAttribute("nonce",i);this.modules=[],t[e]=this}mount(t,e){let i=this.sheet,s=0,n=0;for(let l=0;l<t.length;l++){let e=t[l],o=this.modules.indexOf(e);if(o<n&&o>-1&&(this.modules.splice(o,1),n--,o=-1),-1==o){if(this.modules.splice(n++,0,e),i)for(let t=0;t<e.rules.length;t++)i.insertRule(e.rules[t],s++)}else{for(;n<o;)s+=this.modules[n++].rules.length;s+=e.rules.length,n++}}if(i)e.adoptedStyleSheets.indexOf(this.sheet)<0&&(e.adoptedStyleSheets=[this.sheet,...e.adoptedStyleSheets]);else{let t="";for(let e=0;e<this.modules.length;e++)t+=this.modules[e].getRules()+"\n";this.styleTag.textContent=t;let i=e.head||e;this.styleTag.parentNode!=i&&i.insertBefore(this.styleTag,i.firstChild)}}setNonce(t){this.styleTag&&this.styleTag.getAttribute("nonce")!=t&&this.styleTag.setAttribute("nonce",t)}}export{s as S};
