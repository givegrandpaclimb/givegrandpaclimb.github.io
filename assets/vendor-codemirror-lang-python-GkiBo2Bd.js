import{p as r}from"./vendor-lezer-python-Blz3wEDP.js";import{L as e,s as o,c as t,d as n,f as i,h as a,k as l}from"./vendor-codemirror-language-C3hkV707.js";import{a as s,I as p}from"./vendor-lezer-common-QPiu6Hcj.js";import{i as m,c,s as d}from"./vendor-codemirror-autocomplete-BSg-hdYo.js";import"./vendor-lezer-lr-CZr-wB1l.js";import"./vendor-lezer-highlight-4-fykoed.js";import"./vendor-codemirror-state-D88w-V9V.js";import"./vendor-marijn-find-cluster-break-BFVNO93u.js";import"./vendor-codemirror-view-DVzN21hM.js";import"./vendor-style-mod-tLAqh-pC.js";import"./vendor-w3c-keyname-BorKtCV5.js";const f=new s,u=new Set(["Script","Body","FunctionDefinition","ClassDefinition","LambdaExpression","ForStatement","MatchClause"]);function E(r){return(e,o,t)=>{if(t)return!1;let n=e.node.getChild("VariableName");return n&&o(n,r),!0}}const y={FunctionDefinition:E("function"),ClassDefinition:E("class"),ForStatement(r,e,o){if(o)for(let t=r.node.firstChild;t;t=t.nextSibling)if("VariableName"==t.name)e(t,"variable");else if("in"==t.name)break},ImportStatement(r,e){var o,t;let{node:n}=r,i="from"==(null===(o=n.firstChild)||void 0===o?void 0:o.name);for(let a=n.getChild("import");a;a=a.nextSibling)"VariableName"==a.name&&"as"!=(null===(t=a.nextSibling)||void 0===t?void 0:t.name)&&e(a,i?"variable":"namespace")},AssignStatement(r,e){for(let o=r.node.firstChild;o;o=o.nextSibling)if("VariableName"==o.name)e(o,"variable");else if(":"==o.name||"AssignOp"==o.name)break},ParamList(r,e){for(let o=null,t=r.node.firstChild;t;t=t.nextSibling)"VariableName"!=t.name||o&&/\*|AssignOp/.test(o.name)||e(t,"variable"),o=t},CapturePattern:E("variable"),AsPattern:E("variable"),__proto__:null};function b(r,e){let o=f.get(e);if(o)return o;let t=[],n=!0;function i(e,o){let n=r.sliceString(e.from,e.to);t.push({label:n,type:o})}return e.cursor(p.IncludeAnonymous).iterate(e=>{if(e.name){let r=y[e.name];if(r&&r(e,i,n)||!n&&u.has(e.name))return!1;n=!1}else if(e.to-e.from>8192){for(let o of b(r,e.node))t.push(o);return!1}}),f.set(e,t),t}const _=/^[\w\xa1-\uffff][\w\d\xa1-\uffff]*$/,g=["String","FormatString","Comment","PropertyName"];function x(r){let e=o(r.state).resolveInner(r.pos,-1);if(g.indexOf(e.name)>-1)return null;let t="VariableName"==e.name||e.to-e.from<20&&_.test(r.state.sliceDoc(e.from,e.to));if(!t&&!r.explicit)return null;let n=[];for(let o=e;o;o=o.parent)u.has(o.name)&&(n=n.concat(b(r.state.doc,o)));return{options:n,from:t?e.from:r.pos,validFor:_}}const v=["__annotations__","__builtins__","__debug__","__doc__","__import__","__name__","__loader__","__package__","__spec__","False","None","True"].map(r=>({label:r,type:"constant"})).concat(["ArithmeticError","AssertionError","AttributeError","BaseException","BlockingIOError","BrokenPipeError","BufferError","BytesWarning","ChildProcessError","ConnectionAbortedError","ConnectionError","ConnectionRefusedError","ConnectionResetError","DeprecationWarning","EOFError","Ellipsis","EncodingWarning","EnvironmentError","Exception","FileExistsError","FileNotFoundError","FloatingPointError","FutureWarning","GeneratorExit","IOError","ImportError","ImportWarning","IndentationError","IndexError","InterruptedError","IsADirectoryError","KeyError","KeyboardInterrupt","LookupError","MemoryError","ModuleNotFoundError","NameError","NotADirectoryError","NotImplemented","NotImplementedError","OSError","OverflowError","PendingDeprecationWarning","PermissionError","ProcessLookupError","RecursionError","ReferenceError","ResourceWarning","RuntimeError","RuntimeWarning","StopAsyncIteration","StopIteration","SyntaxError","SyntaxWarning","SystemError","SystemExit","TabError","TimeoutError","TypeError","UnboundLocalError","UnicodeDecodeError","UnicodeEncodeError","UnicodeError","UnicodeTranslateError","UnicodeWarning","UserWarning","ValueError","Warning","ZeroDivisionError"].map(r=>({label:r,type:"type"}))).concat(["bool","bytearray","bytes","classmethod","complex","float","frozenset","int","list","map","memoryview","object","range","set","staticmethod","str","super","tuple","type"].map(r=>({label:r,type:"class"}))).concat(["abs","aiter","all","anext","any","ascii","bin","breakpoint","callable","chr","compile","delattr","dict","dir","divmod","enumerate","eval","exec","exit","filter","format","getattr","globals","hasattr","hash","help","hex","id","input","isinstance","issubclass","iter","len","license","locals","max","min","next","oct","open","ord","pow","print","property","quit","repr","reversed","round","setattr","slice","sorted","sum","vars","zip"].map(r=>({label:r,type:"function"}))),S=[d("def ${name}(${params}):\n\t${}",{label:"def",detail:"function",type:"keyword"}),d("for ${name} in ${collection}:\n\t${}",{label:"for",detail:"loop",type:"keyword"}),d("while ${}:\n\t${}",{label:"while",detail:"loop",type:"keyword"}),d("try:\n\t${}\nexcept ${error}:\n\t${}",{label:"try",detail:"/ except block",type:"keyword"}),d("if ${}:\n\t\n",{label:"if",detail:"block",type:"keyword"}),d("if ${}:\n\t${}\nelse:\n\t${}",{label:"if",detail:"/ else block",type:"keyword"}),d("class ${name}:\n\tdef __init__(self, ${params}):\n\t\t\t${}",{label:"class",detail:"definition",type:"keyword"}),d("import ${module}",{label:"import",detail:"statement",type:"keyword"}),d("from ${module} import ${names}",{label:"from",detail:"import",type:"keyword"})],h=m(g,c(v.concat(S)));function k(r){let{node:e,pos:o}=r,t=r.lineIndent(o,-1),n=null;for(;;){let i=e.childBefore(o);if(!i)break;if("Comment"==i.name)o=i.from;else if("Body"==i.name||"MatchBody"==i.name)r.baseIndentFor(i)+r.unit<=t&&(n=i),e=i;else if("MatchClause"==i.name)e=i;else{if(!i.type.is("Statement"))break;e=i}}return n}function $(r,e){let o=r.baseIndentFor(e),t=r.lineAt(r.pos,-1),n=t.from+t.text.length;return/^\s*($|#)/.test(t.text)&&r.node.to<n+100&&!/\S/.test(r.state.sliceDoc(n,r.node.to))&&r.lineIndent(r.pos,-1)<=o||/^\s*(else:|elif |except |finally:|case\s+[^=:]+:)/.test(r.textAfter)&&r.lineIndent(r.pos,-1)>o?null:o+r.unit}const w=e.define({name:"python",parser:r.configure({props:[n.add({Body:r=>{var e;return null!==(e=$(r,/^\s*(#|$)/.test(r.textAfter)&&k(r)||r.node))&&void 0!==e?e:r.continue()},MatchBody:r=>{var e;return null!==(e=$(r,k(r)||r.node))&&void 0!==e?e:r.continue()},IfStatement:r=>/^\s*(else:|elif )/.test(r.textAfter)?r.baseIndent:r.continue(),"ForStatement WhileStatement":r=>/^\s*else:/.test(r.textAfter)?r.baseIndent:r.continue(),TryStatement:r=>/^\s*(except[ :]|finally:|else:)/.test(r.textAfter)?r.baseIndent:r.continue(),MatchStatement:r=>/^\s*case /.test(r.textAfter)?r.baseIndent+r.unit:r.continue(),"TupleExpression ComprehensionExpression ParamList ArgList ParenthesizedExpression":a({closing:")"}),"DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression":a({closing:"}"}),"ArrayExpression ArrayComprehensionExpression":a({closing:"]"}),MemberExpression:r=>r.baseIndent+r.unit,"String FormatString":()=>null,Script:r=>{var e;let o=k(r);return null!==(e=o&&$(r,o))&&void 0!==e?e:r.continue()}}),i.add({"ArrayExpression DictionaryExpression SetExpression TupleExpression":l,Body:(r,e)=>({from:r.from+1,to:r.to-(r.to==e.doc.length?0:1)}),"String FormatString":(r,e)=>({from:e.doc.lineAt(r.from).to,to:r.to})})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"',"'''",'"""'],stringPrefixes:["f","fr","rf","r","u","b","br","rb","F","FR","RF","R","U","B","BR","RB"]},commentTokens:{line:"#"},indentOnInput:/^\s*([\}\]\)]|else:|elif |except |finally:|case\s+[^:]*:?)$/}});function F(){return new t(w,[w.data.of({autocomplete:x}),w.data.of({autocomplete:h})])}export{h as globalCompletion,x as localCompletionSource,F as python,w as pythonLanguage};
