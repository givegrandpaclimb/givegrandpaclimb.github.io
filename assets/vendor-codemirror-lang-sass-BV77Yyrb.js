import{p as o}from"./vendor-lezer-sass-CAIJjivG.js";import{L as e,c as r,f as n,d as s,k as a,e as t}from"./vendor-codemirror-language-bJH8yZ-V.js";import{defineCSSCompletionSource as d}from"./vendor-codemirror-lang-css-Cfk5rgR2.js";import"./vendor-lezer-lr-kLeAvj2c.js";import"./vendor-lezer-common-3JYFuo68.js";import"./vendor-lezer-highlight-QzoJ8SKk.js";import"./vendor-codemirror-state-d-AKQu11.js";import"./vendor-marijn-find-cluster-break-Dub_CRYN.js";import"./vendor-codemirror-view-BFv1CI2l.js";import"./vendor-style-mod-_NPnILvn.js";import"./vendor-w3c-keyname-f-y9tSbI.js";import"./vendor-lezer-css-CEMGMhzc.js";const m=e.define({name:"sass",parser:o.configure({props:[n.add({Block:a,Comment:(o,e)=>({from:o.from+2,to:"*/"==e.sliceDoc(o.to-2,o.to)?o.to-2:o.to})}),s.add({Declaration:t()})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"},line:"//"},indentOnInput:/^\s*\}$/,wordChars:"$-"}}),i=m.configure({dialect:"indented",props:[s.add({"Block RuleSet":o=>o.baseIndent+o.unit}),n.add({Block:o=>({from:o.from,to:o.to})})]}),l=d(o=>"VariableName"==o.name||"SassVariableName"==o.name);function c(o){return new r((null==o?void 0:o.indented)?i:m,m.data.of({autocomplete:l}))}export{c as sass,l as sassCompletionSource,m as sassLanguage};
