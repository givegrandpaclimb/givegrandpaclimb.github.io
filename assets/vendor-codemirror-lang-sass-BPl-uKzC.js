import{p as r}from"./vendor-lezer-sass-C6Xpalqw.js";import{L as o,c as e,f as s,d as n,k as a,e as m}from"./vendor-codemirror-language-C3hkV707.js";import{defineCSSCompletionSource as t}from"./vendor-codemirror-lang-css-C8Vb684c.js";import"./vendor-lezer-lr-CZr-wB1l.js";import"./vendor-lezer-common-QPiu6Hcj.js";import"./vendor-lezer-highlight-4-fykoed.js";import"./vendor-codemirror-state-D88w-V9V.js";import"./vendor-marijn-find-cluster-break-BFVNO93u.js";import"./vendor-codemirror-view-DVzN21hM.js";import"./vendor-style-mod-tLAqh-pC.js";import"./vendor-w3c-keyname-BorKtCV5.js";import"./vendor-lezer-css-zR3a2mIT.js";const i=o.define({name:"sass",parser:r.configure({props:[s.add({Block:a,Comment:(r,o)=>({from:r.from+2,to:"*/"==o.sliceDoc(r.to-2,r.to)?r.to-2:r.to})}),n.add({Declaration:m()})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"},line:"//"},indentOnInput:/^\s*\}$/,wordChars:"$-"}}),l=i.configure({dialect:"indented",props:[n.add({"Block RuleSet":r=>r.baseIndent+r.unit}),s.add({Block:r=>({from:r.from,to:r.to})})]}),d=t(r=>"VariableName"==r.name||"SassVariableName"==r.name);function p(r){return new e((null==r?void 0:r.indented)?l:i,i.data.of({autocomplete:d}))}export{p as sass,d as sassCompletionSource,i as sassLanguage};
