import{f as t}from"./vendor-smithy-util-utf8-MtSxxKG8.js";const e={},r=new Array(64);for(let s=0,f="A".charCodeAt(0),c="Z".charCodeAt(0);s+f<=c;s++){const t=String.fromCharCode(s+f);e[t]=s,r[s]=t}for(let s=0,f="a".charCodeAt(0),c="z".charCodeAt(0);s+f<=c;s++){const t=String.fromCharCode(s+f),o=s+26;e[t]=o,r[o]=t}for(let s=0;s<10;s++){e[s.toString(10)]=s+52;const t=s.toString(10),o=s+52;e[t]=o,r[o]=t}e["+"]=62,r[62]="+",e["/"]=63,r[63]="/";const o=t=>{let r=t.length/4*3;"=="===t.slice(-2)?r-=2:"="===t.slice(-1)&&r--;const o=new ArrayBuffer(r),n=new DataView(o);for(let s=0;s<t.length;s+=4){let r=0,o=0;for(let n=s,i=s+3;n<=i;n++)if("="!==t[n]){if(!(t[n]in e))throw new TypeError(`Invalid character ${t[n]} in base64 string.`);r|=e[t[n]]<<6*(i-n),o+=6}else r>>=6;const f=s/4*3;r>>=o%8;const c=Math.floor(o/8);for(let t=0;t<c;t++){const e=8*(c-t-1);n.setUint8(f+t,(r&255<<e)>>e)}}return new Uint8Array(o)};function n(e){let o;o="string"==typeof e?t(e):e;const n="object"==typeof o&&"number"==typeof o.length,s="object"==typeof o&&"number"==typeof o.byteOffset&&"number"==typeof o.byteLength;if(!n&&!s)throw new Error("@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.");let f="";for(let t=0;t<o.length;t+=3){let e=0,n=0;for(let r=t,f=Math.min(t+3,o.length);r<f;r++)e|=o[r]<<8*(f-r-1),n+=8;const s=Math.ceil(n/6);e<<=6*s-n;for(let t=1;t<=s;t++){const o=6*(s-t);f+=r[(e&63<<o)>>o]}f+="==".slice(0,4-s)}return f}export{o as f,n as t};
