const t="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,e=new Set,i="object"==typeof process&&process?process:{},s=(t,e,s,o)=>{"function"==typeof i.emitWarning&&i.emitWarning(t,e,s,o)};let o=globalThis.AbortController,h=globalThis.AbortSignal;if(void 0===o){h=class{onabort;_onabort=[];reason;aborted=!1;addEventListener(t,e){this._onabort.push(e)}},o=class{constructor(){e()}signal=new h;abort(t){if(!this.signal.aborted){this.signal.reason=t,this.signal.aborted=!0;for(const e of this.signal._onabort)e(t);this.signal.onabort?.(t)}}};let t="1"!==i.env?.LRU_CACHE_IGNORE_AC_WARNING;const e=()=>{t&&(t=!1,s("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}const n=t=>t&&t===Math.floor(t)&&t>0&&isFinite(t),a=t=>n(t)?t<=Math.pow(2,8)?Uint8Array:t<=Math.pow(2,16)?Uint16Array:t<=Math.pow(2,32)?Uint32Array:t<=Number.MAX_SAFE_INTEGER?r:null:null;class r extends Array{constructor(t){super(t),this.fill(0)}}class l{heap;length;static#t=!1;static create(t){const e=a(t);if(!e)return[];l.#t=!0;const i=new l(t,e);return l.#t=!1,i}constructor(t,e){if(!l.#t)throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new e(t),this.length=0}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}}class c{#e;#i;#s;#o;#h;#n;#a;#r;get perf(){return this.#r}ttl;ttlResolution;ttlAutopurge;updateAgeOnGet;updateAgeOnHas;allowStale;noDisposeOnSet;noUpdateTTL;maxEntrySize;sizeCalculation;noDeleteOnFetchRejection;noDeleteOnStaleGet;allowStaleOnFetchAbort;allowStaleOnFetchRejection;ignoreFetchAbort;#l;#c;#d;#u;#f;#p;#g;#v;#S;#m;#z;#y;#w;#L;#F;#x;#A;#T;static unsafeExposeInternals(t){return{starts:t.#w,ttls:t.#L,sizes:t.#y,keyMap:t.#d,keyList:t.#u,valList:t.#f,next:t.#p,prev:t.#g,get head(){return t.#v},get tail(){return t.#S},free:t.#m,isBackgroundFetch:e=>t.#_(e),backgroundFetch:(e,i,s,o)=>t.#k(e,i,s,o),moveToTail:e=>t.#b(e),indexes:e=>t.#O(e),rindexes:e=>t.#E(e),isStale:e=>t.#D(e)}}get max(){return this.#e}get maxSize(){return this.#i}get calculatedSize(){return this.#c}get size(){return this.#l}get fetchMethod(){return this.#n}get memoMethod(){return this.#a}get dispose(){return this.#s}get onInsert(){return this.#o}get disposeAfter(){return this.#h}constructor(i){const{max:o=0,ttl:h,ttlResolution:r=1,ttlAutopurge:d,updateAgeOnGet:u,updateAgeOnHas:f,allowStale:p,dispose:g,onInsert:v,disposeAfter:S,noDisposeOnSet:m,noUpdateTTL:z,maxSize:y=0,maxEntrySize:w=0,sizeCalculation:L,fetchMethod:F,memoMethod:x,noDeleteOnFetchRejection:A,noDeleteOnStaleGet:T,allowStaleOnFetchRejection:_,allowStaleOnFetchAbort:k,ignoreFetchAbort:b,perf:O}=i;if(void 0!==O&&"function"!=typeof O?.now)throw new TypeError("perf option must have a now() method if specified");if(this.#r=O??t,0!==o&&!n(o))throw new TypeError("max option must be a nonnegative integer");const E=o?a(o):Array;if(!E)throw new Error("invalid max value: "+o);if(this.#e=o,this.#i=y,this.maxEntrySize=w||this.#i,this.sizeCalculation=L,this.sizeCalculation){if(!this.#i&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw new TypeError("sizeCalculation set to non-function")}if(void 0!==x&&"function"!=typeof x)throw new TypeError("memoMethod must be a function if defined");if(this.#a=x,void 0!==F&&"function"!=typeof F)throw new TypeError("fetchMethod must be a function if specified");if(this.#n=F,this.#x=!!F,this.#d=new Map,this.#u=new Array(o).fill(void 0),this.#f=new Array(o).fill(void 0),this.#p=new E(o),this.#g=new E(o),this.#v=0,this.#S=0,this.#m=l.create(o),this.#l=0,this.#c=0,"function"==typeof g&&(this.#s=g),"function"==typeof v&&(this.#o=v),"function"==typeof S?(this.#h=S,this.#z=[]):(this.#h=void 0,this.#z=void 0),this.#F=!!this.#s,this.#T=!!this.#o,this.#A=!!this.#h,this.noDisposeOnSet=!!m,this.noUpdateTTL=!!z,this.noDeleteOnFetchRejection=!!A,this.allowStaleOnFetchRejection=!!_,this.allowStaleOnFetchAbort=!!k,this.ignoreFetchAbort=!!b,0!==this.maxEntrySize){if(0!==this.#i&&!n(this.#i))throw new TypeError("maxSize must be a positive integer if specified");if(!n(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");this.#M()}if(this.allowStale=!!p,this.noDeleteOnStaleGet=!!T,this.updateAgeOnGet=!!u,this.updateAgeOnHas=!!f,this.ttlResolution=n(r)||0===r?r:1,this.ttlAutopurge=!!d,this.ttl=h||0,this.ttl){if(!n(this.ttl))throw new TypeError("ttl must be a positive integer if specified");this.#I()}if(0===this.#e&&0===this.ttl&&0===this.#i)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#e&&!this.#i){const t="LRU_CACHE_UNBOUNDED";(t=>!e.has(t))(t)&&(e.add(t),s("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",t,c))}}getRemainingTTL(t){return this.#d.has(t)?1/0:0}#I(){const t=new r(this.#e),e=new r(this.#e);this.#L=t,this.#w=e,this.#C=(i,s,o=this.#r.now())=>{if(e[i]=0!==s?o:0,t[i]=s,0!==s&&this.ttlAutopurge){const t=setTimeout(()=>{this.#D(i)&&this.#R(this.#u[i],"expire")},s+1);t.unref&&t.unref()}},this.#W=i=>{e[i]=0!==t[i]?this.#r.now():0},this.#B=(o,h)=>{if(t[h]){const n=t[h],a=e[h];if(!n||!a)return;o.ttl=n,o.start=a,o.now=i||s();const r=o.now-a;o.remainingTTL=n-r}};let i=0;const s=()=>{const t=this.#r.now();if(this.ttlResolution>0){i=t;const e=setTimeout(()=>i=0,this.ttlResolution);e.unref&&e.unref()}return t};this.getRemainingTTL=o=>{const h=this.#d.get(o);if(void 0===h)return 0;const n=t[h],a=e[h];return n&&a?n-((i||s())-a):1/0},this.#D=o=>{const h=e[o],n=t[o];return!!n&&!!h&&(i||s())-h>n}}#W=()=>{};#B=()=>{};#C=()=>{};#D=()=>!1;#M(){const t=new r(this.#e);this.#c=0,this.#y=t,this.#G=e=>{this.#c-=t[e],t[e]=0},this.#U=(t,e,i,s)=>{if(this.#_(e))return 0;if(!n(i)){if(!s)throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");if("function"!=typeof s)throw new TypeError("sizeCalculation must be a function");if(i=s(e,t),!n(i))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}return i},this.#j=(e,i,s)=>{if(t[e]=i,this.#i){const i=this.#i-t[e];for(;this.#c>i;)this.#N(!0)}this.#c+=t[e],s&&(s.entrySize=i,s.totalCalculatedSize=this.#c)}}#G=t=>{};#j=(t,e,i)=>{};#U=(t,e,i,s)=>{if(i||s)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0};*#O({allowStale:t=this.allowStale}={}){if(this.#l)for(let e=this.#S;this.#H(e)&&(!t&&this.#D(e)||(yield e),e!==this.#v);)e=this.#g[e]}*#E({allowStale:t=this.allowStale}={}){if(this.#l)for(let e=this.#v;this.#H(e)&&(!t&&this.#D(e)||(yield e),e!==this.#S);)e=this.#p[e]}#H(t){return void 0!==t&&this.#d.get(this.#u[t])===t}*entries(){for(const t of this.#O())void 0===this.#f[t]||void 0===this.#u[t]||this.#_(this.#f[t])||(yield[this.#u[t],this.#f[t]])}*rentries(){for(const t of this.#E())void 0===this.#f[t]||void 0===this.#u[t]||this.#_(this.#f[t])||(yield[this.#u[t],this.#f[t]])}*keys(){for(const t of this.#O()){const e=this.#u[t];void 0===e||this.#_(this.#f[t])||(yield e)}}*rkeys(){for(const t of this.#E()){const e=this.#u[t];void 0===e||this.#_(this.#f[t])||(yield e)}}*values(){for(const t of this.#O())void 0===this.#f[t]||this.#_(this.#f[t])||(yield this.#f[t])}*rvalues(){for(const t of this.#E())void 0===this.#f[t]||this.#_(this.#f[t])||(yield this.#f[t])}[Symbol.iterator](){return this.entries()}[Symbol.toStringTag]="LRUCache";find(t,e={}){for(const i of this.#O()){const s=this.#f[i],o=this.#_(s)?s.__staleWhileFetching:s;if(void 0!==o&&t(o,this.#u[i],this))return this.get(this.#u[i],e)}}forEach(t,e=this){for(const i of this.#O()){const s=this.#f[i],o=this.#_(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#u[i],this)}}rforEach(t,e=this){for(const i of this.#E()){const s=this.#f[i],o=this.#_(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#u[i],this)}}purgeStale(){let t=!1;for(const e of this.#E({allowStale:!0}))this.#D(e)&&(this.#R(this.#u[e],"expire"),t=!0);return t}info(t){const e=this.#d.get(t);if(void 0===e)return;const i=this.#f[e],s=this.#_(i)?i.__staleWhileFetching:i;if(void 0===s)return;const o={value:s};if(this.#L&&this.#w){const t=this.#L[e],i=this.#w[e];if(t&&i){const e=t-(this.#r.now()-i);o.ttl=e,o.start=Date.now()}}return this.#y&&(o.size=this.#y[e]),o}dump(){const t=[];for(const e of this.#O({allowStale:!0})){const i=this.#u[e],s=this.#f[e],o=this.#_(s)?s.__staleWhileFetching:s;if(void 0===o||void 0===i)continue;const h={value:o};if(this.#L&&this.#w){h.ttl=this.#L[e];const t=this.#r.now()-this.#w[e];h.start=Math.floor(Date.now()-t)}this.#y&&(h.size=this.#y[e]),t.unshift([i,h])}return t}load(t){this.clear();for(const[e,i]of t){if(i.start){const t=Date.now()-i.start;i.start=this.#r.now()-t}this.set(e,i.value,i)}}set(t,e,i={}){if(void 0===e)return this.delete(t),this;const{ttl:s=this.ttl,start:o,noDisposeOnSet:h=this.noDisposeOnSet,sizeCalculation:n=this.sizeCalculation,status:a}=i;let{noUpdateTTL:r=this.noUpdateTTL}=i;const l=this.#U(t,e,i.size||0,n);if(this.maxEntrySize&&l>this.maxEntrySize)return a&&(a.set="miss",a.maxEntrySizeExceeded=!0),this.#R(t,"set"),this;let c=0===this.#l?void 0:this.#d.get(t);if(void 0===c)c=0===this.#l?this.#S:0!==this.#m.length?this.#m.pop():this.#l===this.#e?this.#N(!1):this.#l,this.#u[c]=t,this.#f[c]=e,this.#d.set(t,c),this.#p[this.#S]=c,this.#g[c]=this.#S,this.#S=c,this.#l++,this.#j(c,l,a),a&&(a.set="add"),r=!1,this.#T&&this.#o?.(e,t,"add");else{this.#b(c);const i=this.#f[c];if(e!==i){if(this.#x&&this.#_(i)){i.__abortController.abort(new Error("replaced"));const{__staleWhileFetching:e}=i;void 0===e||h||(this.#F&&this.#s?.(e,t,"set"),this.#A&&this.#z?.push([e,t,"set"]))}else h||(this.#F&&this.#s?.(i,t,"set"),this.#A&&this.#z?.push([i,t,"set"]));if(this.#G(c),this.#j(c,l,a),this.#f[c]=e,a){a.set="replace";const t=i&&this.#_(i)?i.__staleWhileFetching:i;void 0!==t&&(a.oldValue=t)}}else a&&(a.set="update");this.#T&&this.onInsert?.(e,t,e===i?"update":"replace")}if(0===s||this.#L||this.#I(),this.#L&&(r||this.#C(c,s,o),a&&this.#B(a,c)),!h&&this.#A&&this.#z){const t=this.#z;let e;for(;e=t?.shift();)this.#h?.(...e)}return this}pop(){try{for(;this.#l;){const t=this.#f[this.#v];if(this.#N(!0),this.#_(t)){if(t.__staleWhileFetching)return t.__staleWhileFetching}else if(void 0!==t)return t}}finally{if(this.#A&&this.#z){const t=this.#z;let e;for(;e=t?.shift();)this.#h?.(...e)}}}#N(t){const e=this.#v,i=this.#u[e],s=this.#f[e];return this.#x&&this.#_(s)?s.__abortController.abort(new Error("evicted")):(this.#F||this.#A)&&(this.#F&&this.#s?.(s,i,"evict"),this.#A&&this.#z?.push([s,i,"evict"])),this.#G(e),t&&(this.#u[e]=void 0,this.#f[e]=void 0,this.#m.push(e)),1===this.#l?(this.#v=this.#S=0,this.#m.length=0):this.#v=this.#p[e],this.#d.delete(i),this.#l--,e}has(t,e={}){const{updateAgeOnHas:i=this.updateAgeOnHas,status:s}=e,o=this.#d.get(t);if(void 0!==o){const t=this.#f[o];if(this.#_(t)&&void 0===t.__staleWhileFetching)return!1;if(!this.#D(o))return i&&this.#W(o),s&&(s.has="hit",this.#B(s,o)),!0;s&&(s.has="stale",this.#B(s,o))}else s&&(s.has="miss");return!1}peek(t,e={}){const{allowStale:i=this.allowStale}=e,s=this.#d.get(t);if(void 0===s||!i&&this.#D(s))return;const o=this.#f[s];return this.#_(o)?o.__staleWhileFetching:o}#k(t,e,i,s){const h=void 0===e?void 0:this.#f[e];if(this.#_(h))return h;const n=new o,{signal:a}=i;a?.addEventListener("abort",()=>n.abort(a.reason),{signal:n.signal});const r={signal:n.signal,options:i,context:s},l=(s,o=!1)=>{const{aborted:h}=n.signal,a=i.ignoreFetchAbort&&void 0!==s;if(i.status&&(h&&!o?(i.status.fetchAborted=!0,i.status.fetchError=n.signal.reason,a&&(i.status.fetchAbortIgnored=!0)):i.status.fetchResolved=!0),h&&!a&&!o)return c(n.signal.reason);const l=d,u=this.#f[e];return(u===d||a&&o&&void 0===u)&&(void 0===s?void 0!==l.__staleWhileFetching?this.#f[e]=l.__staleWhileFetching:this.#R(t,"fetch"):(i.status&&(i.status.fetchUpdated=!0),this.set(t,s,r.options))),s},c=s=>{const{aborted:o}=n.signal,h=o&&i.allowStaleOnFetchAbort,a=h||i.allowStaleOnFetchRejection,r=a||i.noDeleteOnFetchRejection,l=d;if(this.#f[e]===d&&(r&&void 0!==l.__staleWhileFetching?h||(this.#f[e]=l.__staleWhileFetching):this.#R(t,"fetch")),a)return i.status&&void 0!==l.__staleWhileFetching&&(i.status.returnedStale=!0),l.__staleWhileFetching;if(l.__returned===l)throw s};i.status&&(i.status.fetchDispatched=!0);const d=new Promise((e,s)=>{const o=this.#n?.(t,h,r);o&&o instanceof Promise&&o.then(t=>e(void 0===t?void 0:t),s),n.signal.addEventListener("abort",()=>{i.ignoreFetchAbort&&!i.allowStaleOnFetchAbort||(e(void 0),i.allowStaleOnFetchAbort&&(e=t=>l(t,!0)))})}).then(l,t=>(i.status&&(i.status.fetchRejected=!0,i.status.fetchError=t),c(t))),u=Object.assign(d,{__abortController:n,__staleWhileFetching:h,__returned:void 0});return void 0===e?(this.set(t,u,{...r.options,status:void 0}),e=this.#d.get(t)):this.#f[e]=u,u}#_(t){if(!this.#x)return!1;const e=t;return!!e&&e instanceof Promise&&e.hasOwnProperty("__staleWhileFetching")&&e.__abortController instanceof o}async fetch(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,ttl:h=this.ttl,noDisposeOnSet:n=this.noDisposeOnSet,size:a=0,sizeCalculation:r=this.sizeCalculation,noUpdateTTL:l=this.noUpdateTTL,noDeleteOnFetchRejection:c=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:d=this.allowStaleOnFetchRejection,ignoreFetchAbort:u=this.ignoreFetchAbort,allowStaleOnFetchAbort:f=this.allowStaleOnFetchAbort,context:p,forceRefresh:g=!1,status:v,signal:S}=e;if(!this.#x)return v&&(v.fetch="get"),this.get(t,{allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,status:v});const m={allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,ttl:h,noDisposeOnSet:n,size:a,sizeCalculation:r,noUpdateTTL:l,noDeleteOnFetchRejection:c,allowStaleOnFetchRejection:d,allowStaleOnFetchAbort:f,ignoreFetchAbort:u,status:v,signal:S};let z=this.#d.get(t);if(void 0===z){v&&(v.fetch="miss");const e=this.#k(t,z,m,p);return e.__returned=e}{const e=this.#f[z];if(this.#_(e)){const t=i&&void 0!==e.__staleWhileFetching;return v&&(v.fetch="inflight",t&&(v.returnedStale=!0)),t?e.__staleWhileFetching:e.__returned=e}const o=this.#D(z);if(!g&&!o)return v&&(v.fetch="hit"),this.#b(z),s&&this.#W(z),v&&this.#B(v,z),e;const h=this.#k(t,z,m,p),n=void 0!==h.__staleWhileFetching&&i;return v&&(v.fetch=o?"stale":"refresh",n&&o&&(v.returnedStale=!0)),n?h.__staleWhileFetching:h.__returned=h}}async forceFetch(t,e={}){const i=await this.fetch(t,e);if(void 0===i)throw new Error("fetch() returned undefined");return i}memo(t,e={}){const i=this.#a;if(!i)throw new Error("no memoMethod provided to constructor");const{context:s,forceRefresh:o,...h}=e,n=this.get(t,h);if(!o&&void 0!==n)return n;const a=i(t,n,{options:h,context:s});return this.set(t,a,h),a}get(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,status:h}=e,n=this.#d.get(t);if(void 0!==n){const e=this.#f[n],a=this.#_(e);return h&&this.#B(h,n),this.#D(n)?(h&&(h.get="stale"),a?(h&&i&&void 0!==e.__staleWhileFetching&&(h.returnedStale=!0),i?e.__staleWhileFetching:void 0):(o||this.#R(t,"expire"),h&&i&&(h.returnedStale=!0),i?e:void 0)):(h&&(h.get="hit"),a?e.__staleWhileFetching:(this.#b(n),s&&this.#W(n),e))}h&&(h.get="miss")}#P(t,e){this.#g[e]=t,this.#p[t]=e}#b(t){t!==this.#S&&(t===this.#v?this.#v=this.#p[t]:this.#P(this.#g[t],this.#p[t]),this.#P(this.#S,t),this.#S=t)}delete(t){return this.#R(t,"delete")}#R(t,e){let i=!1;if(0!==this.#l){const s=this.#d.get(t);if(void 0!==s)if(i=!0,1===this.#l)this.#q(e);else{this.#G(s);const i=this.#f[s];if(this.#_(i)?i.__abortController.abort(new Error("deleted")):(this.#F||this.#A)&&(this.#F&&this.#s?.(i,t,e),this.#A&&this.#z?.push([i,t,e])),this.#d.delete(t),this.#u[s]=void 0,this.#f[s]=void 0,s===this.#S)this.#S=this.#g[s];else if(s===this.#v)this.#v=this.#p[s];else{const t=this.#g[s];this.#p[t]=this.#p[s];const e=this.#p[s];this.#g[e]=this.#g[s]}this.#l--,this.#m.push(s)}}if(this.#A&&this.#z?.length){const t=this.#z;let e;for(;e=t?.shift();)this.#h?.(...e)}return i}clear(){return this.#q("delete")}#q(t){for(const e of this.#E({allowStale:!0})){const i=this.#f[e];if(this.#_(i))i.__abortController.abort(new Error("deleted"));else{const s=this.#u[e];this.#F&&this.#s?.(i,s,t),this.#A&&this.#z?.push([i,s,t])}}if(this.#d.clear(),this.#f.fill(void 0),this.#u.fill(void 0),this.#L&&this.#w&&(this.#L.fill(0),this.#w.fill(0)),this.#y&&this.#y.fill(0),this.#v=0,this.#S=0,this.#m.length=0,this.#c=0,this.#l=0,this.#A&&this.#z){const t=this.#z;let e;for(;e=t?.shift();)this.#h?.(...e)}}}export{c as L};
