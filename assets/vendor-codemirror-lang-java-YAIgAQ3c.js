import{p as e}from"./vendor-lezer-java-BpiAZ9tP.js";import{L as t,c as o,d as r,f as n,e as a,h as s,j as l,k as m}from"./vendor-codemirror-language-D9Y_sbSd.js";import"./vendor-lezer-lr-CnaH20hO.js";import"./vendor-lezer-common-BNyJYURD.js";import"./vendor-lezer-highlight-BtpKku1v.js";import"./vendor-codemirror-state-d-AKQu11.js";import"./vendor-marijn-find-cluster-break-Dub_CRYN.js";import"./vendor-codemirror-view-CwWsG3pM.js";import"./vendor-style-mod-_NPnILvn.js";import"./vendor-w3c-keyname-f-y9tSbI.js";const i=t.define({name:"java",parser:e.configure({props:[r.add({IfStatement:a({except:/^\s*({|else\b)/}),TryStatement:a({except:/^\s*({|catch|finally)\b/}),LabeledStatement:l,SwitchBlock:e=>{let t=e.textAfter,o=/^\s*\}/.test(t),r=/^\s*(case|default)\b/.test(t);return e.baseIndent+(o?0:r?1:2)*e.unit},Block:s({closing:"}"}),BlockComment:()=>null,Statement:a({except:/^{/})}),n.add({"Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody ConstructorBody InterfaceBody ArrayInitializer":m,BlockComment:e=>({from:e.from+2,to:e.to-2})})]}),languageData:{commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\})$/}});function d(){return new o(i)}export{d as java,i as javaLanguage};
