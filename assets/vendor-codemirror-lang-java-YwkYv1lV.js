import{p as e}from"./vendor-lezer-java-C5W8WB4L.js";import{L as o,c as r,d as t,f as n,e as a,h as s,j as l,k as m}from"./vendor-codemirror-language-C3hkV707.js";import"./vendor-lezer-lr-CZr-wB1l.js";import"./vendor-lezer-common-QPiu6Hcj.js";import"./vendor-lezer-highlight-4-fykoed.js";import"./vendor-codemirror-state-D88w-V9V.js";import"./vendor-marijn-find-cluster-break-BFVNO93u.js";import"./vendor-codemirror-view-DVzN21hM.js";import"./vendor-style-mod-tLAqh-pC.js";import"./vendor-w3c-keyname-BorKtCV5.js";const i=o.define({name:"java",parser:e.configure({props:[t.add({IfStatement:a({except:/^\s*({|else\b)/}),TryStatement:a({except:/^\s*({|catch|finally)\b/}),LabeledStatement:l,SwitchBlock:e=>{let o=e.textAfter,r=/^\s*\}/.test(o),t=/^\s*(case|default)\b/.test(o);return e.baseIndent+(r?0:t?1:2)*e.unit},Block:s({closing:"}"}),BlockComment:()=>null,Statement:a({except:/^{/})}),n.add({"Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody ConstructorBody InterfaceBody ArrayInitializer":m,BlockComment:e=>({from:e.from+2,to:e.to-2})})]}),languageData:{commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\})$/}});function c(){return new r(i)}export{c as java,i as javaLanguage};
